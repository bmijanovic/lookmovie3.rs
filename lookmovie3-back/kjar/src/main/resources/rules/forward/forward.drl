package rules.forward;


import com.ftn.sbnz.service.Entities.Events.FilmRating;
import com.ftn.sbnz.service.Entities.Models.User;
import com.ftn.sbnz.service.Entities.Models.Film;
import com.ftn.sbnz.service.Entities.Models.FilmGenre;

global User updatedUser;
global Film recommendedFilm;
global Film likedFilm;

rule "hello FilmRating"
when
    $filmRating : FilmRating()
then
    System.out.println("FilmRating inserted");
end

rule "5 star rating"
when
    $filmRating : FilmRating(rating == 5, $user : user, $film : film)
then
    System.out.println("5 star rating for film " + $film.getName() + " by user " + $user.getUsername());
    modify($user) {
        getLikedFilms().add($film);
    }
    updatedUser = $user;
    likedFilm = $film;
end

rule "film added to liked films"
when
    $user : User(id == updatedUser.getId(), $likedFilms : likedFilms)
    $film : Film() from $likedFilms
then
    System.out.println("Film " + $film.getName() + " added to liked films by user " + $user.getUsername());
    modify($user) {
        getLikedGenres().add($film.getGenre());
    }
    updatedUser = $user;
end


rule "genre added to liked genres"
when
    $user : User(id == updatedUser.getId(), $likedGenres : likedGenres)
    $genre : FilmGenre() from $likedGenres
    $film : Film(genre == $genre,  id != likedFilm.getId())
then
    System.out.println("Genre " + $genre + " added to liked genres by user " + $user.getUsername());
    System.out.println("Recommended mmmmmmmmm: " + $film.getName());
    recommendedFilm = $film;
end